[(Typedef
    { Aast.AnnotatedAST.t_annotation = (); t_name = ([4:6-8], "\\T1");
      t_tparams = []; t_constraint = None;
      t_kind = ([4:11-14], (Hprim Tint));
      t_user_attributes =
      [{ Aast.AnnotatedAST.ua_name = ([3:15-18], "Bar"); ua_params = [] };
        { Aast.AnnotatedAST.ua_name = ([3:3-6], "Foo");
          ua_params =
          [(([3:7-8], int), (Int "1")); (([3:9-10], int), (Int "2"));
            (([3:11-12], int), (Int "3"))]
          }
        ];
      t_mode = <opaque>; t_vis = Transparent });
  (Typedef
     { Aast.AnnotatedAST.t_annotation = (); t_name = ([7:6-8], "\\T2");
       t_tparams = []; t_constraint = None;
       t_kind = ([7:11-18], (Hoption ([7:12-18], (Hprim Tstring))));
       t_user_attributes =
       [{ Aast.AnnotatedAST.ua_name = ([6:3-18], "SingleAttribute");
          ua_params = [] }
         ];
       t_mode = <opaque>; t_vis = Transparent });
  (Typedef
     { Aast.AnnotatedAST.t_annotation = ();
       t_name = ([9:6-23], "\\Serialized_contra");
       t_tparams = [(Contravariant, ([9:25-26], "T"), [], false)];
       t_constraint = None; t_kind = ([9:30-36], (Hprim Tstring));
       t_user_attributes = []; t_mode = <opaque>; t_vis = Transparent });
  (Typedef
     { Aast.AnnotatedAST.t_annotation = ();
       t_name = ([10:6-19], "\\Serialized_co");
       t_tparams = [(Covariant, ([10:21-22], "T"), [], false)];
       t_constraint = None; t_kind = ([10:26-32], (Hprim Tstring));
       t_user_attributes = []; t_mode = <opaque>; t_vis = Transparent })
  ]
